@startuml

class           persona
abstract        vehiculo
class           cliente
class           automovil
class           bicicleta
class           motocicleta
class           gestorAlquiler

vehiculo <|-- bicicleta
vehiculo <|-- automovil
vehiculo <|-- motocicleta
gestorAlquiler o-- cliente
gestorAlquiler o-- vehiculo
persona <|-- cliente

abstract persona{
     # {abstract} long dni
     # {abstract} String direccion
     # {abstract} String nombre
     + persona(long:dni, String direccion, String nombre)
}

class cliente{
     - int nroCliente
     - String vehiculoId
     + cliente(persona)
}

class gestorAlquiler{
    - list<vehiculo>
    - list<cliente>
    - int contadorBicicletasDisponibles
    - int contadorAutomovilDisponibles
    - int contadorMotocicletaDisponibles
    + gestorAlquiler(int:bicicletas, int motocicletas, int automovil)
    + gestorAlquiler()
    + agregarBicicletas(int cantidad)
    + agregarMotocicletas(int cantidad)
    + agregarVehiculos(int cantidad)
    + alquilarVehiculo()
    + listadoDeAutomovil()
}

abstract vehiculo{
     #  {abstract} string id;
     #  {abstract} boolean estaOcupado;
     #  {abstract} string fechaUltimoRegistro;
     #  {abstract} string fechaUltimaDevolucion;
     #  {abstract} vehiculoEstaOcupado()
     #  {abstract} reservarVehiculo()
     #  {abstract} devolverVehiculo()
     #  {abstract} obtenerId()
     #  {abstract} costoActual()
}

class automovil{
     - String ID_AUT
     - int COSTO_DIA
     + automovil()
}

class bicicleta{
     - String ID_BIC
     - int COSTO_HORA
     + bicicleta()
}

class motocicleta{
     - String ID_MOTO
     - int COSTO_DIA
     + motocicleta()
}

@enduml